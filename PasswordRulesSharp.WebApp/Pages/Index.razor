@page "/"

<PageTitle>PasswordRulesSharp Web App</PageTitle>

<BSContainer Class="my-3">
    <h1>PasswordRulesSharp Web App</h1>
    
    <BSNav IsTabs="true">
        <BSNavItem IsActive="true">
            <TabLabel>Explain a rule</TabLabel>
            <TabContent>
                <p>Paste a line:</p>

                <BSInput InputType="InputType.TextArea" Value="@RuleLine" @oninput="RuleLineChanged" />

                @if (Rule != null)
                {
                    <dl class="m-2">
                        @if (Rule.MinLength.HasValue)
                        {
                            <dt>Minimum length:</dt>
                            <dd>@Rule.MinLength.Value</dd>
                        }

                        @if (Rule.MaxLength.HasValue)
                        {
                            <dt>Maximum length:</dt>
                            <dd>@Rule.MaxLength.Value</dd>
                        }

                        @if (Rule.Required != null)
                        {
                            <dt>Required character classes:</dt>

                            @foreach (var cClass in Rule.Required)
                            {
                                @switch (cClass)
                                {
                                    case PasswordRulesSharp.Models.SpecificCharacterClass specific:
                                        <dd>At least one of: <code>@string.Join(" ", @specific.Chars)</code></dd>
                                        break;
                                    case PasswordRulesSharp.Models.UnicodeCharacterClass unicode:
                                        <dd>Any character</dd>
                                        break;
                                }
                            }
                        }
                    </dl>
                }
            </TabContent>
        </BSNavItem>

        <BSNavItem>
            <TabLabel>Generate a new rule</TabLabel>
            <TabContent>
                <BSInput InputType="InputType.Range" @bind-Value="Value" />
            </TabContent>
        </BSNavItem>
    </BSNav>
</BSContainer>

@code {
    private string RuleLine { get; set; } = "";
    private PasswordRulesSharp.Parser.Rule? Rule;

    private int Value { get; set; }

    private void RuleLineChanged(ChangeEventArgs e)
    {
        if (e.Value is not string rule)
        {
            Rule = null;
            return;
        }

        var tokenizer = new PasswordRulesSharp.Parser.Tokenizer(rule);

        if (tokenizer.IsValid() is not (true, _))
        {
            Rule = null;
            return;
        }

        Rule = new Parser.Rule(rule);
    }
}
